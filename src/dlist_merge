#include <iostream>
using namespace std;

class DList {
  public:
  int value;
  DList *next;
  DList *prev;
  DList *child;
  DList();
};

DList::DList()
{
  next = NULL;
  prev = NULL;
  child = NULL;
  value = 0;
}

DList *append(DList *&root, int value)
{
  DList *item;
  item = new DList;
  if( item != NULL)
  {
    item->value = value;
    if(root == NULL)
    {
      root = item;
    }
    else
    {
      //Do the traversal
      DList *node = root;
      while(node->next!=NULL)
      {
        node=node->next;
      }
      item->prev=node;
      node->next=item;
    }
  }
  return NULL;
}

void show_list(DList *root)
{
  DList *item = root;
  while(item!=NULL)
  {
    cout << "Item:" << item->value << endl;
    item = item->next;
  }
}

DList *head = NULL;

int main() {
  DList *parent;
  std::cout << "Hello World!\n";
  append(head, 1);
  parent = append(head, 2);
  append(head, 3);
  append(head, 4);
  show_list(head);
  cout << "Show children" << endl;
  append(parent->child,10);
  append(parent->child,11);
  append(parent->child,12);
  append(parent->child,13);
  show_list(parent->child);
}
